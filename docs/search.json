[{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Getting Started with peruopen","text":"peruopen package provides comprehensive interface Peru’s CKAN data portal (datosabiertos.gob.pe), enabling search, discover, download open government datasets directly R. guide show : Search complete data catalog Filter datasets specific criteria (like CDC tags) Download load resources data frames","code":""},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Getting Started with peruopen","text":"easiest way start getting catalog available datasets: catalog contains three main components: datasets: Information dataset resources: Individual files/resources within datasets summary: Overall statistics Use po_explore() get organized views catalog:","code":"# Get the complete catalog (may take a moment the first time) catalog <- po_catalog()  # View the structure str(catalog, max.level = 1) # Quick overview catalog$summary$n_datasets catalog$summary$n_resources catalog$summary$total_size_gb # General exploration overview <- po_explore()  # View top organizations head(overview$by_organization)  # View available formats head(overview$by_format)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"getting-the-complete-catalog","dir":"Articles","previous_headings":"","what":"Getting the Complete Catalog","title":"Getting Started with peruopen","text":"easiest way start getting catalog available datasets: catalog contains three main components: datasets: Information dataset resources: Individual files/resources within datasets summary: Overall statistics","code":"# Get the complete catalog (may take a moment the first time) catalog <- po_catalog()  # View the structure str(catalog, max.level = 1) # Quick overview catalog$summary$n_datasets catalog$summary$n_resources catalog$summary$total_size_gb"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"exploring-available-data","dir":"Articles","previous_headings":"","what":"Exploring Available Data","title":"Getting Started with peruopen","text":"Use po_explore() get organized views catalog:","code":"# General exploration overview <- po_explore()  # View top organizations head(overview$by_organization)  # View available formats head(overview$by_format)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"searching-the-catalog","dir":"Articles","previous_headings":"","what":"Searching the Catalog","title":"Getting Started with peruopen","text":"Search across dataset titles, descriptions, organizations, tags: can combine multiple filters precise searches:","code":"# Search for health-related data health_data <- po_search(\"salud\") print(health_data)  # Search for COVID data covid_data <- po_search(\"covid\")  # View matching datasets head(covid_data$datasets) # Find CSV files from MINSA about epidemiology epi_csv <- po_search(   query = \"epidemiologia\",   organizations = \"MINSA\",    formats = \"CSV\" )  # Search by specific tags only tag_search <- po_search(\"dengue\", search_tags_only = TRUE)  # Multiple tag search health_tags <- po_search(tags = c(\"salud\", \"medicina\", \"epidemiologia\"))"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"basic-search","dir":"Articles","previous_headings":"","what":"Basic Search","title":"Getting Started with peruopen","text":"Search across dataset titles, descriptions, organizations, tags:","code":"# Search for health-related data health_data <- po_search(\"salud\") print(health_data)  # Search for COVID data covid_data <- po_search(\"covid\")  # View matching datasets head(covid_data$datasets)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"advanced-filtering","dir":"Articles","previous_headings":"","what":"Advanced Filtering","title":"Getting Started with peruopen","text":"can combine multiple filters precise searches:","code":"# Find CSV files from MINSA about epidemiology epi_csv <- po_search(   query = \"epidemiologia\",   organizations = \"MINSA\",    formats = \"CSV\" )  # Search by specific tags only tag_search <- po_search(\"dengue\", search_tags_only = TRUE)  # Multiple tag search health_tags <- po_search(tags = c(\"salud\", \"medicina\", \"epidemiologia\"))"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"working-with-cdc-data","dir":"Articles","previous_headings":"","what":"Working with CDC Data","title":"Getting Started with peruopen","text":"Let’s focus datasets related CDC (Centro Nacional de Epidemiología, Prevención y Control de Enfermedades): CDC datasets, can filter resources format: Filter resources file size easier handling:","code":"# Search for CDC-related datasets cdc_data <- po_search(\"CDC\")  # Alternative: search in organization field specifically cdc_org <- po_search(organizations = \"CDC\")  # View what we found print(cdc_data) # Get all resources from CDC datasets cdc_resources <- cdc_data$resources  # Filter for CSV files only cdc_csv <- cdc_resources %>%   filter(format == \"CSV\")  # Filter for Excel files cdc_excel <- cdc_resources %>%   filter(format %in% c(\"XLSX\", \"XLS\"))  # View resource details head(cdc_csv[, c(\"resource_name\", \"dataset_title\", \"size_mb\", \"format\")]) # Small files (under 10 MB) for quick analysis small_files <- cdc_resources %>%   filter(size_mb < 10, format == \"CSV\")  # Medium files (10-100 MB) medium_files <- cdc_resources %>%   filter(size_mb >= 10, size_mb < 100)  print(paste(\"Small CSV files:\", nrow(small_files))) print(paste(\"Medium files:\", nrow(medium_files)))"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"finding-cdc-datasets","dir":"Articles","previous_headings":"","what":"Finding CDC Datasets","title":"Getting Started with peruopen","text":"","code":"# Search for CDC-related datasets cdc_data <- po_search(\"CDC\")  # Alternative: search in organization field specifically cdc_org <- po_search(organizations = \"CDC\")  # View what we found print(cdc_data)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"filtering-cdc-resources","dir":"Articles","previous_headings":"","what":"Filtering CDC Resources","title":"Getting Started with peruopen","text":"CDC datasets, can filter resources format:","code":"# Get all resources from CDC datasets cdc_resources <- cdc_data$resources  # Filter for CSV files only cdc_csv <- cdc_resources %>%   filter(format == \"CSV\")  # Filter for Excel files cdc_excel <- cdc_resources %>%   filter(format %in% c(\"XLSX\", \"XLS\"))  # View resource details head(cdc_csv[, c(\"resource_name\", \"dataset_title\", \"size_mb\", \"format\")])"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"size-based-filtering","dir":"Articles","previous_headings":"","what":"Size-Based Filtering","title":"Getting Started with peruopen","text":"Filter resources file size easier handling:","code":"# Small files (under 10 MB) for quick analysis small_files <- cdc_resources %>%   filter(size_mb < 10, format == \"CSV\")  # Medium files (10-100 MB) medium_files <- cdc_resources %>%   filter(size_mb >= 10, size_mb < 100)  print(paste(\"Small CSV files:\", nrow(small_files))) print(paste(\"Medium files:\", nrow(medium_files)))"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"downloading-and-loading-data","dir":"Articles","previous_headings":"","what":"Downloading and Loading Data","title":"Getting Started with peruopen","text":"simplest way get data po_get(): know resource ID, can load directly: analyzing multiple datasets:","code":"# Get data from a specific dataset (replace with actual dataset name) # dataset_data <- po_get(\"nombre-del-dataset\")  # Get just the metadata # dataset_info <- po_get(\"nombre-del-dataset\", what = \"info\")  # Get both data and metadata # complete_data <- po_get(\"nombre-del-dataset\", what = \"all\") # From your search results, pick a resource ID if (nrow(cdc_csv) > 0) {   resource_id <- cdc_csv$resource_id[1]      # Load the resource as a data frame   # data <- po_get(resource_id)      # View the structure   # str(data) } # Function to safely load resources load_resource_safely <- function(resource_id) {   tryCatch({     po_get(resource_id)   }, error = function(e) {     message(\"Failed to load resource \", resource_id, \": \", e$message)     NULL   }) }  # Load multiple small CSV files if (nrow(small_files) > 0) {   # Take first 3 files as example   sample_resources <- head(small_files$resource_id, 3)      # Load them into a list   # data_list <- lapply(sample_resources, load_resource_safely)   # names(data_list) <- sample_resources      # Remove any failed loads   # data_list <- data_list[!sapply(data_list, is.null)] }"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"using-po_get-for-easy-access","dir":"Articles","previous_headings":"","what":"Using po_get() for Easy Access","title":"Getting Started with peruopen","text":"simplest way get data po_get():","code":"# Get data from a specific dataset (replace with actual dataset name) # dataset_data <- po_get(\"nombre-del-dataset\")  # Get just the metadata # dataset_info <- po_get(\"nombre-del-dataset\", what = \"info\")  # Get both data and metadata # complete_data <- po_get(\"nombre-del-dataset\", what = \"all\")"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"loading-specific-resources","dir":"Articles","previous_headings":"","what":"Loading Specific Resources","title":"Getting Started with peruopen","text":"know resource ID, can load directly:","code":"# From your search results, pick a resource ID if (nrow(cdc_csv) > 0) {   resource_id <- cdc_csv$resource_id[1]      # Load the resource as a data frame   # data <- po_get(resource_id)      # View the structure   # str(data) }"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"batch-processing-multiple-resources","dir":"Articles","previous_headings":"","what":"Batch Processing Multiple Resources","title":"Getting Started with peruopen","text":"analyzing multiple datasets:","code":"# Function to safely load resources load_resource_safely <- function(resource_id) {   tryCatch({     po_get(resource_id)   }, error = function(e) {     message(\"Failed to load resource \", resource_id, \": \", e$message)     NULL   }) }  # Load multiple small CSV files if (nrow(small_files) > 0) {   # Take first 3 files as example   sample_resources <- head(small_files$resource_id, 3)      # Load them into a list   # data_list <- lapply(sample_resources, load_resource_safely)   # names(data_list) <- sample_resources      # Remove any failed loads   # data_list <- data_list[!sapply(data_list, is.null)] }"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"working-with-downloaded-data","dir":"Articles","previous_headings":"","what":"Working with Downloaded Data","title":"Getting Started with peruopen","text":"","code":"# Example of basic data exploration explore_dataset <- function(data, name = \"Dataset\") {   cat(\"Dataset:\", name, \"\\n\")   cat(\"Dimensions:\", nrow(data), \"rows x\", ncol(data), \"columns\\n\")   cat(\"Column names:\", paste(head(names(data)), collapse = \", \"), \"\\n\")      # Show missing data summary   missing_summary <- sapply(data, function(x) sum(is.na(x)))   cat(\"Missing values:\", sum(missing_summary), \"total\\n\\n\")      return(invisible(data)) }  # Use with your loaded data # explore_dataset(data, \"CDC Health Data\") # Function to combine datasets with common columns combine_compatible_datasets <- function(data_list) {   # Find common columns   all_columns <- lapply(data_list, names)   common_cols <- Reduce(intersect, all_columns)      if (length(common_cols) == 0) {     stop(\"No common columns found\")   }      # Select common columns and combine   standardized_data <- lapply(data_list, function(df) df[, common_cols])   combined <- do.call(rbind, standardized_data)      return(combined) }  # Use when you have multiple compatible datasets # combined_data <- combine_compatible_datasets(data_list)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"data-cleaning-and-preparation","dir":"Articles","previous_headings":"","what":"Data Cleaning and Preparation","title":"Getting Started with peruopen","text":"","code":"# Example of basic data exploration explore_dataset <- function(data, name = \"Dataset\") {   cat(\"Dataset:\", name, \"\\n\")   cat(\"Dimensions:\", nrow(data), \"rows x\", ncol(data), \"columns\\n\")   cat(\"Column names:\", paste(head(names(data)), collapse = \", \"), \"\\n\")      # Show missing data summary   missing_summary <- sapply(data, function(x) sum(is.na(x)))   cat(\"Missing values:\", sum(missing_summary), \"total\\n\\n\")      return(invisible(data)) }  # Use with your loaded data # explore_dataset(data, \"CDC Health Data\")"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"combining-multiple-datasets","dir":"Articles","previous_headings":"","what":"Combining Multiple Datasets","title":"Getting Started with peruopen","text":"","code":"# Function to combine datasets with common columns combine_compatible_datasets <- function(data_list) {   # Find common columns   all_columns <- lapply(data_list, names)   common_cols <- Reduce(intersect, all_columns)      if (length(common_cols) == 0) {     stop(\"No common columns found\")   }      # Select common columns and combine   standardized_data <- lapply(data_list, function(df) df[, common_cols])   combined <- do.call(rbind, standardized_data)      return(combined) }  # Use when you have multiple compatible datasets # combined_data <- combine_compatible_datasets(data_list)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"performance-tips","dir":"Articles","previous_headings":"","what":"Performance Tips","title":"Getting Started with peruopen","text":"package automatically caches catalog better performance: large catalogs, use progressive loading:","code":"# Force refresh of cached catalog catalog_fresh <- po_catalog(refresh = TRUE)  # Check cache information cache_info()  # Clear cache if needed # clear_cache() # Start with a subset partial_catalog <- po_catalog(target_size = 1000)  # Extend if you need more extended_catalog <- po_catalog(target_size = 2000, extend_existing = TRUE)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"caching","dir":"Articles","previous_headings":"","what":"Caching","title":"Getting Started with peruopen","text":"package automatically caches catalog better performance:","code":"# Force refresh of cached catalog catalog_fresh <- po_catalog(refresh = TRUE)  # Check cache information cache_info()  # Clear cache if needed # clear_cache()"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"progressive-loading","dir":"Articles","previous_headings":"","what":"Progressive Loading","title":"Getting Started with peruopen","text":"large catalogs, use progressive loading:","code":"# Start with a subset partial_catalog <- po_catalog(target_size = 1000)  # Extend if you need more extended_catalog <- po_catalog(target_size = 2000, extend_existing = TRUE)"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"real-world-example-analyzing-epidemiological-data","dir":"Articles","previous_headings":"","what":"Real-World Example: Analyzing Epidemiological Data","title":"Getting Started with peruopen","text":"’s complete workflow analyzing CDC epidemiological data:","code":"# 1. Find relevant datasets epi_data <- po_search(   query = \"epidemiologia\",   organizations = \"CDC\",   formats = \"CSV\" )  # 2. Filter for manageable file sizes suitable_files <- epi_data$resources %>%   filter(size_mb < 50, format == \"CSV\") %>%   arrange(desc(last_modified))  # 3. Load the most recent dataset if (nrow(suitable_files) > 0) {   # recent_data <- po_get(suitable_files$resource_id[1])      # 4. Basic analysis   # explore_dataset(recent_data, \"Recent Epidemiological Data\")      # 5. Save for further analysis   # write.csv(recent_data, \"cdc_epi_data.csv\", row.names = FALSE) }"},{"path":"https://yourusername.github.io/peruopen/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with peruopen","text":"Explore full function reference ?po_catalog, ?po_search, etc. Check specific organizations po_explore(\"MINSA\") po_explore(\"MEF\") Use po_list_organizations() see available data sources Set automated data pipelines using package’s caching features detailed examples advanced usage, see package documentation additional vignettes.","code":""},{"path":"https://yourusername.github.io/peruopen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Name. Author, maintainer.","code":""},{"path":"https://yourusername.github.io/peruopen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Name Y (2025). peruopen: Access Peru's Open Data Portal (CKAN). R package version 0.0.0.9000, https://github.com/yourusername/peruopen.","code":"@Manual{,   title = {peruopen: Access Peru's Open Data Portal (CKAN)},   author = {Your Name},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/yourusername/peruopen}, }"},{"path":"https://yourusername.github.io/peruopen/claude.html","id":null,"dir":"","previous_headings":"","what":"Peru CKAN R Package Development Guidelines","title":"Peru CKAN R Package Development Guidelines","text":"situated inside R package source directory. subdirectory R/ contains source files. subdirectory tests/testthat/ contains corresponding tests. e.g. R/task.R tested primarily tests/testthat/test-task.R. add new code comments, remove existing code comments comment isn’t relevant anymore. CRITICAL: Always add @export roxygen tags user-facing functions update NAMESPACE accordingly. Functions without @export internal won’t available users. package yet published users; remove functionality outright ’s longer needed rather beginning deprecation process. need worry breaking changes. testing code raises message, warning, error, use expect_snapshot() (possibly error = TRUE) instead expect_message() otherwise. ’re running package tests, use devtools::load_all(); testthat::test_file(\"tests/testthat/path--file.R\"). encounter namespacing issues, don’t delete tests otherwise work, instead ask . get sense style used write test code package, read R/*.R tests/testthat/*.R, respectively. Notably, comment code besides roxygen comments.","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"package-purpose","dir":"","previous_headings":"","what":"Package Purpose","title":"Peru CKAN R Package Development Guidelines","text":"R package provides comprehensive interface Peru’s CKAN data portal (datosabiertos.gob.pe), enabling users : Query search CKAN data portal Search datasets categories, tags, format, resource type Extract complete metadata dataset Download load resources directly R","code":""},{"path":[]},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"ckan-api-details","dir":"","previous_headings":"Technical Context from Prior Work","what":"CKAN API Details","title":"Peru CKAN R Package Development Guidelines","text":"Base endpoint: https://www.datosabiertos.gob.pe/api/3/action/ API version: CKAN v3 package_list - Returns dataset names (works reliably) package_show?id={dataset_id} - Returns complete metadata dataset resource_show?id={resource_id} - Returns metadata specific resource group_list - Returns organization/group data (283+ organizations available) current_package_list_with_resources - HIGHLY EFFICIENT - Returns complete metadata resources single call pagination support site_read - Check portal availability Non-functional endpoints: package_search, tag_list, organization_list, tag_search, package_autocomplete available Peru’s CKAN instance","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"known-limitations-and-workarounds","dir":"","previous_headings":"Technical Context from Prior Work","what":"Known Limitations and Workarounds","title":"Peru CKAN R Package Development Guidelines","text":"✅ current_package_list_with_resources - Single API call gets complete metadata + resources ✅ Local filtering regex patterns dataset fields ✅ Organization-based filtering using group_list ✅ Pagination support large result sets ✅ Structured tabular output datasets resources https://datosabiertos.gob.pe/search/field_tags/{tag_name}-{tag_id} Package list can cached (e.g., 1-hour TTL session) Metadata fetching limited avoid overwhelming API Consider pagination strategies large result sets","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"http-client-recommendations","dir":"","previous_headings":"Technical Context from Prior Work","what":"HTTP Client Recommendations","title":"Peru CKAN R Package Development Guidelines","text":"Based prior experience: - Use httr2 HTTP requests - Implement retry logic (e.g., 3 attempts exponential backoff) - Set appropriate timeout (e.g., 30 seconds) - Use custom User-Agent header - Handle JSON responses structure: {\"success\": true, \"result\": {...}}","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"resource-handling","dir":"","previous_headings":"Technical Context from Prior Work","what":"Resource Handling","title":"Peru CKAN R Package Development Guidelines","text":"Filter specific formats (CSV, Excel, JSON, etc.) Consider implementing smart loading based file type Handle different encodings data formats appropriately","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"package-architecture-considerations","dir":"","previous_headings":"","what":"Package Architecture Considerations","title":"Peru CKAN R Package Development Guidelines","text":"designing package, consider: Modular design: Separate API interactions, data processing, user-facing functions Caching strategy: Balance performance data freshness Error handling: Graceful degradation API unavailable Extensibility: Design accommodate future CKAN API changes additional features Interoperability: Ensure compatibility tidyverse data.table workflows","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"testing-strategy","dir":"","previous_headings":"","what":"Testing Strategy","title":"Peru CKAN R Package Development Guidelines","text":"Mock API responses unit tests Include integration tests can skipped portal unavailable Test edge cases like empty results, malformed data, API timeouts Use snapshot tests complex data structures","code":""},{"path":"https://yourusername.github.io/peruopen/claude.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Peru CKAN R Package Development Guidelines","text":"Provide clear examples common use cases Document API limitations workarounds Use Quarto (.qmd) vignettes documentation instead R Markdown (.Rmd) Include vignettes showing real-world workflows Maintain NEWS.md file changes Remember: package aims provide general access Peru’s open data portal, limited specific dataset types. Design flexibility user convenience mind. Always finishing important tasks, stage commit changes Always test new additions make sure work","code":""},{"path":"https://yourusername.github.io/peruopen/reference/cache_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cache information — cache_info","title":"Get cache information — cache_info","text":"Get cache information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/cache_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cache information — cache_info","text":"","code":"cache_info()"},{"path":"https://yourusername.github.io/peruopen/reference/cache_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cache information — cache_info","text":"List cache status information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear package cache — clear_cache","title":"Clear package cache — clear_cache","text":"Clear package cache","code":""},{"path":"https://yourusername.github.io/peruopen/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear package cache — clear_cache","text":"","code":"clear_cache()"},{"path":"https://yourusername.github.io/peruopen/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear package cache — clear_cache","text":"Invisible TRUE","code":""},{"path":"https://yourusername.github.io/peruopen/reference/peruopen.html","id":null,"dir":"Reference","previous_headings":"","what":"peruopen: Access Peru's Open Data Portal (CKAN) — peruopen","title":"peruopen: Access Peru's Open Data Portal (CKAN) — peruopen","text":"package provides comprehensive interface Peru's CKAN data portal (datosabiertos.gob.pe), enabling users query search datasets, extract metadata, download resources directly R.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/peruopen.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main functions","title":"peruopen: Access Peru's Open Data Portal (CKAN) — peruopen","text":"po_catalog Get complete data catalog po_search Search datasets resources po_get Smart getter datasets/resources po_explore Interactive data exploration","code":""},{"path":[]},{"path":"https://yourusername.github.io/peruopen/reference/peruopen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"peruopen: Access Peru's Open Data Portal (CKAN) — peruopen","text":"Maintainer: Name .email@example.com","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Get searchable catalog of Peru open data with smart loading — po_catalog","title":"Get searchable catalog of Peru open data with smart loading — po_catalog","text":"Downloads returns catalog datasets resources Peru's open data portal. Uses intelligent chunked loading handle API limitations. Can get partial complete catalogs based target size.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get searchable catalog of Peru open data with smart loading — po_catalog","text":"","code":"po_catalog(   refresh = FALSE,   verbose = TRUE,   target_size = NULL,   extend_existing = FALSE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get searchable catalog of Peru open data with smart loading — po_catalog","text":"refresh Logical. Force refresh cached catalog (default FALSE) verbose Logical. Show progress messages (default TRUE) target_size Integer. Number datasets fetch (default NULL = try 3954) extend_existing Logical. Add data existing catalog (default FALSE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get searchable catalog of Peru open data with smart loading — po_catalog","text":"list containing: datasets Tibble datasets summary information resources Tibble resources linked parent datasets summary List catalog statistics metadata","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get searchable catalog of Peru open data with smart loading — po_catalog","text":"","code":"if (FALSE) { # \\dontrun{ # Get a working subset (1000-1500 datasets) catalog <- po_catalog(target_size = 1500)  # Get more coverage progressively catalog <- po_catalog(target_size = 2500)  # Try to get everything (may timeout) catalog <- po_catalog()  # Extend existing catalog with more data more_catalog <- po_catalog(target_size = 3000, extend_existing = TRUE)  # Find all CSV files under 50MB csv_files <- catalog$resources %>%   filter(format == \"CSV\", size_mb < 50)  # Find datasets by organization minsa_data <- catalog$datasets %>%   filter(grepl(\"MINSA\", organization)) } # }"},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog_rebuild.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cache and rebuild complete catalog with target size — po_catalog_rebuild","title":"Clear cache and rebuild complete catalog with target size — po_catalog_rebuild","text":"Workaround extension caching issue. Clears cache rebuilds catalog scratch target size.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog_rebuild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cache and rebuild complete catalog with target size — po_catalog_rebuild","text":"","code":"po_catalog_rebuild(target_size = 3000, verbose = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_catalog_rebuild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear cache and rebuild complete catalog with target size — po_catalog_rebuild","text":"target_size Number datasets load verbose Show progress","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_download_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a resource file — po_download_resource","title":"Download a resource file — po_download_resource","text":"Download resource file","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_download_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a resource file — po_download_resource","text":"","code":"po_download_resource(resource_id, path = NULL, overwrite = FALSE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_download_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a resource file — po_download_resource","text":"resource_id Character. resource ID path Character. Local file path (optional, uses temp directory NULL) overwrite Logical. Whether overwrite existing files (default FALSE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_download_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a resource file — po_download_resource","text":"Character path downloaded file","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_explore.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive exploration of Peru's open data — po_explore","title":"Interactive exploration of Peru's open data — po_explore","text":"Provides structured views data catalog help discover relevant datasets. Returns organized summaries different dimensions.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_explore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive exploration of Peru's open data — po_explore","text":"","code":"po_explore(query = NULL, verbose = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_explore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive exploration of Peru's open data — po_explore","text":"query Optional search term focus exploration verbose Logical. Show exploration progress (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_explore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive exploration of Peru's open data — po_explore","text":"list multiple views data: by_organization Datasets grouped publishing organization by_format Resources grouped file format by_year Temporal distribution datasets by_size Size distribution largest datasets recent Recently updated datasets popular Datasets resources recommendations Suggested starting points based query","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_explore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive exploration of Peru's open data — po_explore","text":"","code":"if (FALSE) { # \\dontrun{ # General exploration explore <- po_explore()  # Explore health-related data health <- po_explore(\"salud\")  # See what MINSA publishes explore$by_organization$MINSA  # Find all available Excel files explore$by_format$XLSX } # }"},{"path":"https://yourusername.github.io/peruopen/reference/po_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Smart getter for Peru open data — po_get","title":"Smart getter for Peru open data — po_get","text":"Intelligently fetches data metadata based identifier provided. Works dataset names, dataset IDs, resource IDs.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smart getter for Peru open data — po_get","text":"","code":"po_get(   identifier,   what = c(\"data\", \"info\", \"all\"),   format = NULL,   clean_names = TRUE,   verbose = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smart getter for Peru open data — po_get","text":"identifier Dataset name, dataset ID, resource ID get: \"data\" (default), \"info\", \"\" format Preferred format multiple available (e.g., \"CSV\", \"XLSX\") clean_names Logical. Clean column names R compatibility (default TRUE) verbose Logical. Show download progress (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smart getter for Peru open data — po_get","text":"Depending '' parameter: data data.frame/tibble actual data info list complete metadata list containing data metadata","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smart getter for Peru open data — po_get","text":"","code":"if (FALSE) { # \\dontrun{ # Get data using dataset name malaria <- po_get(\"malaria-2024\")  # Get metadata only info <- po_get(\"malaria-2024\", what = \"info\")  # Get specific resource by ID data <- po_get(\"abc-123-resource-id\")  # Get everything complete <- po_get(\"dengue-2024\", what = \"all\")  # Prefer Excel format if available data_xlsx <- po_get(\"dataset-name\", format = \"XLSX\") } # }"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_complete_metadata_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Get complete dataset metadata in nested list format with data cleaning — po_get_complete_metadata_nested","title":"Get complete dataset metadata in nested list format with data cleaning — po_get_complete_metadata_nested","text":"Get complete dataset metadata nested list format data cleaning","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_complete_metadata_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get complete dataset metadata in nested list format with data cleaning — po_get_complete_metadata_nested","text":"","code":"po_get_complete_metadata_nested(   query = NULL,   tags = NULL,   organizations = NULL,   max_results = 1000,   page_size = 200,   clean_text = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_complete_metadata_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get complete dataset metadata in nested list format with data cleaning — po_get_complete_metadata_nested","text":"query Character string text search tags Character vector tags filter organizations Character vector organizations filter max_results Integer. Maximum number datasets (default 1000) page_size Integer. Results per API call (default 200) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_complete_metadata_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get complete dataset metadata in nested list format with data cleaning — po_get_complete_metadata_nested","text":"nested list structure complete metadata per dataset","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of datasets — po_get_dataset_count","title":"Get total number of datasets — po_get_dataset_count","text":"Get total number datasets","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of datasets — po_get_dataset_count","text":"","code":"po_get_dataset_count(use_cache = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total number of datasets — po_get_dataset_count","text":"use_cache Logical. Whether use cached results (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of datasets — po_get_dataset_count","text":"Integer count total datasets","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed metadata for a dataset — po_get_dataset_metadata","title":"Get detailed metadata for a dataset — po_get_dataset_metadata","text":"Get detailed metadata dataset","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed metadata for a dataset — po_get_dataset_metadata","text":"","code":"po_get_dataset_metadata(dataset_id, use_cache = TRUE, clean_text = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed metadata for a dataset — po_get_dataset_metadata","text":"dataset_id Character. dataset ID use_cache Logical. Whether use cached results (default TRUE) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_dataset_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed metadata for a dataset — po_get_dataset_metadata","text":"list comprehensive dataset metadata","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata for a specific resource — po_get_resource_metadata","title":"Get metadata for a specific resource — po_get_resource_metadata","text":"Get metadata specific resource","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata for a specific resource — po_get_resource_metadata","text":"","code":"po_get_resource_metadata(resource_id)"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata for a specific resource — po_get_resource_metadata","text":"resource_id Character. resource ID","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata for a specific resource — po_get_resource_metadata","text":"list resource metadata","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the download URL for a resource — po_get_resource_url","title":"Get the download URL for a resource — po_get_resource_url","text":"Get download URL resource","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the download URL for a resource — po_get_resource_url","text":"","code":"po_get_resource_url(resource_id)"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the download URL for a resource — po_get_resource_url","text":"resource_id Character. resource ID","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_resource_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the download URL for a resource — po_get_resource_url","text":"Character URL resource","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_structured_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detailed tabular metadata including all resources — po_get_structured_metadata","title":"Get detailed tabular metadata including all resources — po_get_structured_metadata","text":"Get detailed tabular metadata including resources","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_structured_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detailed tabular metadata including all resources — po_get_structured_metadata","text":"","code":"po_get_structured_metadata(   query = NULL,   tags = NULL,   organizations = NULL,   limit = 50,   use_cache = TRUE,   clean_text = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_get_structured_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detailed tabular metadata including all resources — po_get_structured_metadata","text":"query Character string text search tags Character vector tags filter organizations Character vector organizations filter limit Integer. Maximum number datasets (default 50) use_cache Logical. Whether use cached results (default TRUE) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_get_structured_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detailed tabular metadata including all resources — po_get_structured_metadata","text":"list datasets tibble resources tibble","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available datasets from Peru's CKAN portal — po_list_datasets","title":"List all available datasets from Peru's CKAN portal — po_list_datasets","text":"List available datasets Peru's CKAN portal","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available datasets from Peru's CKAN portal — po_list_datasets","text":"","code":"po_list_datasets(use_cache = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_list_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available datasets from Peru's CKAN portal — po_list_datasets","text":"use_cache Logical. Whether use cached results (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available datasets from Peru's CKAN portal — po_list_datasets","text":"tibble dataset names","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_organizations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available organizations/groups from CKAN portal — po_list_organizations","title":"Get available organizations/groups from CKAN portal — po_list_organizations","text":"Get available organizations/groups CKAN portal","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_organizations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available organizations/groups from CKAN portal — po_list_organizations","text":"","code":"po_list_organizations(use_cache = TRUE)"},{"path":"https://yourusername.github.io/peruopen/reference/po_list_organizations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available organizations/groups from CKAN portal — po_list_organizations","text":"use_cache Logical. Whether use cached results (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_organizations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available organizations/groups from CKAN portal — po_list_organizations","text":"tibble organization information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"List resources for a dataset — po_list_resources","title":"List resources for a dataset — po_list_resources","text":"List resources dataset","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List resources for a dataset — po_list_resources","text":"","code":"po_list_resources(   dataset_id,   format = NULL,   use_cache = TRUE,   clean_text = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_list_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List resources for a dataset — po_list_resources","text":"dataset_id Character. dataset ID format Character. Filter resource format (optional) use_cache Logical. Whether use cached results (default TRUE) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_list_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List resources for a dataset — po_list_resources","text":"tibble resource information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_load_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a resource directly into R — po_load_resource","title":"Load a resource directly into R — po_load_resource","text":"Load resource directly R","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_load_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a resource directly into R — po_load_resource","text":"","code":"po_load_resource(resource_id, format = NULL, clean_names = TRUE, ...)"},{"path":"https://yourusername.github.io/peruopen/reference/po_load_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a resource directly into R — po_load_resource","text":"resource_id Character. resource ID format Character. Resource format (auto-detected NULL) clean_names Logical. Clean column names R compatibility (default TRUE) ... Additional arguments passed reading functions","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_load_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a resource directly into R — po_load_resource","text":"Data frame file path unsupported formats","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Unified search across Peru's open data catalog — po_search","title":"Unified search across Peru's open data catalog — po_search","text":"Search across datasets resources Peru's open data portal. Returns results organized datasets associated resources.","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unified search across Peru's open data catalog — po_search","text":"","code":"po_search(   query = NULL,   tags = NULL,   type = c(\"all\", \"datasets\", \"resources\"),   formats = NULL,   organizations = NULL,   search_tags_only = FALSE,   use_cache = TRUE,   verbose = FALSE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unified search across Peru's open data catalog — po_search","text":"query Character string search (searches titles, descriptions, organizations, tags) tags Character vector tags search tag fields type search: \"\" (default), \"datasets\", \"resources\" formats Character vector resource formats filter (e.g., c(\"CSV\", \"XLSX\")) organizations Character vector organizations filter search_tags_only Logical. TRUE query provided, search tag fields (default FALSE) use_cache Logical. Use cached catalog (default TRUE) verbose Logical. Show search progress (default FALSE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unified search across Peru's open data catalog — po_search","text":"list containing: datasets Tibble matching datasets resources Tibble resources matching datasets summary Search result statistics","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unified search across Peru's open data catalog — po_search","text":"","code":"if (FALSE) { # \\dontrun{ # Search everything related to COVID covid_data <- po_search(\"covid\")  # Find all CSV files about dengue dengue_csv <- po_search(\"dengue\", formats = \"CSV\")  # Get all resources from MINSA minsa <- po_search(organizations = \"MINSA\", type = \"resources\")  # Search by specific tags health_data <- po_search(tags = c(\"salud\", \"medicina\"))  # Search only in tag fields (not titles/descriptions) tag_only <- po_search(\"covid\", search_tags_only = TRUE)  # Just search for resources directly csv_files <- po_search(type = \"resources\", formats = \"CSV\") } # }"},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Search datasets with filters (FAST - using efficient API endpoint) — po_search_datasets","title":"Search datasets with filters (FAST - using efficient API endpoint) — po_search_datasets","text":"Search datasets filters (FAST - using efficient API endpoint)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search datasets with filters (FAST - using efficient API endpoint) — po_search_datasets","text":"","code":"po_search_datasets(   query = NULL,   tags = NULL,   organizations = NULL,   limit = 50,   use_cache = TRUE,   clean_text = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search datasets with filters (FAST - using efficient API endpoint) — po_search_datasets","text":"query Character string text search tags Character vector tags filter organizations Character vector organizations filter limit Integer. Maximum number results (default 50) use_cache Logical. Whether use cached results (default TRUE) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search datasets with filters (FAST - using efficient API endpoint) — po_search_datasets","text":"tibble filtered dataset information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets_paginated.html","id":null,"dir":"Reference","previous_headings":"","what":"Search datasets with pagination support for large result sets — po_search_datasets_paginated","title":"Search datasets with pagination support for large result sets — po_search_datasets_paginated","text":"Search datasets pagination support large result sets","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets_paginated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search datasets with pagination support for large result sets — po_search_datasets_paginated","text":"","code":"po_search_datasets_paginated(   query = NULL,   tags = NULL,   organizations = NULL,   max_results = 500,   page_size = 100,   clean_text = TRUE )"},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets_paginated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search datasets with pagination support for large result sets — po_search_datasets_paginated","text":"query Character string text search tags Character vector tags filter organizations Character vector organizations filter max_results Integer. Maximum total results return (default 500) page_size Integer. Results per API call (default 100) clean_text Logical. Whether clean HTML formatting (default TRUE)","code":""},{"path":"https://yourusername.github.io/peruopen/reference/po_search_datasets_paginated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search datasets with pagination support for large result sets — po_search_datasets_paginated","text":"tibble filtered dataset information","code":""},{"path":"https://yourusername.github.io/peruopen/reference/print.po_explore_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for po_explore results — print.po_explore_result","title":"Print method for po_explore results — print.po_explore_result","text":"Print method po_explore results","code":""},{"path":"https://yourusername.github.io/peruopen/reference/print.po_explore_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for po_explore results — print.po_explore_result","text":"","code":"# S3 method for class 'po_explore_result' print(x, ...)"},{"path":"https://yourusername.github.io/peruopen/reference/print.po_search_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for po_search results — print.po_search_result","title":"Print method for po_search results — print.po_search_result","text":"Print method po_search results","code":""},{"path":"https://yourusername.github.io/peruopen/reference/print.po_search_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for po_search results — print.po_search_result","text":"","code":"# S3 method for class 'po_search_result' print(x, ...)"}]
